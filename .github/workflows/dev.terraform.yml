name: Deploy to Dev Environment with Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "terraform/**"
      - ".github/workflows/dev.terraform.yml"
  pull_request:
    branches:
      - develop
    paths:
      - "terraform/**"
      - ".github/workflows/dev.terraform.yml"

permissions:
  id-token: write
  contents: read

env:
  AZCLI_VERSION: ${{ vars.AZCLI_VERSION || '2.72.0' }}
  TF_VERSION: ${{ vars.TF_VERSION || '1.11.2' }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/develop' && 'dev' || 'prod' }}
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get runner's Public IP
        id: runner-ip
        uses: haythem/public-ip@v1.3

      - name: Check if KeyVault exists
        id: check_if_keyvault_exists
        continue-on-error: true
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault show --name ${{ secrets.KEY_VAULT_NAME }} --query "name" --output tsv

      - name: Add runner's Public IP to KeyVault Firewall
        if: steps.check_if_keyvault_exists.outcome == 'success'
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault network-rule add \
              --name ${{ secrets.KEY_VAULT_NAME }} \
              --ip-address ${{ steps.runner-ip.outputs.ipv4 }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Init
        run: terraform init -backend-config=backend/${{ vars.ENV }}.tfbackend -reconfigure
        env:
          ARM_CLIENT_ID: ${{ secrets.BACKEND_AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.BACKEND_AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.BACKEND_AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -var-file=variables/${{ vars.ENV }}.tfvars -no-color -input=false
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var-file=variables/${{ vars.ENV }}.tfvars -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Remove runner's Public IP from KeyVault Firewall
        if: steps.check_if_keyvault_exists.outcome == 'success'
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault network-rule remove \
              --name ${{ secrets.KEY_VAULT_NAME }} \
              --ip-address ${{ steps.runner-ip.outputs.ipv4 }}
